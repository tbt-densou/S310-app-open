{
  // --- 行末スペースの自動削除をすべて無効化 ---
  // これにより、Markdownの行末スペース（半角スペース2つ）が保存時に保護されます。
  "files.trimTrailingWhitespace": false,
  "trailing-spaces.trimOnSave": false, // Trailing Spaces 拡張機能の自動削除も無効化

  // --- Prettier (コード整形) & Markdown All in One の連携 ---

  // 1. デフォルトのフォーマッタとしてPrettierを設定
  "editor.defaultFormatter": "esbenp.prettier-vscode",

  // 2. ファイル保存時に自動でフォーマットをかける
  "editor.formatOnSave": true,

  // 3. Markdownファイル設定
  "[markdown]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true,
    // PrettierのMarkdown設定：意図的な改行（半角スペース2つ）を保持する
    "prettier.proseWrap": "preserve"
  },

  // --- Prettier 設定の補強 ---
  "prettier.requireConfig": true, // プロジェクトルートにprettier.config.jsがない場合は整形しない
  "prettier.printWidth": 100, // 1行の最大文字数（調整可能）
  "prettier.tabWidth": 2, // スペース2に統一
  "prettier.useTabs": false, // タブではなくスペースを使用

  // --- markdownlint (構文チェック) の調整 ---

  "markdownlint.config": {
    "MD013": false, // 行の長さ（最大行数）の制限を無効化
    // MD009 (行末の不要なスペース) のチェックを緩和し、行末のスペース2つによる改行を許可
    "MD009": { "br_spaces": 2 }
  },

  // --- zenkaku (全角スペース検出) ---

  // 4. 全角スペースを視覚的にハイライト表示
  "zenkaku.enable": true,

  // --- GitLens/Git Graph (Git機能) ---

  // 5. GitLensのホバー表示をシンプルにし、邪魔にならないように設定
  "gitlens.codeLens.enabled": false,
  "gitlens.currentLine.enabled": false,

  // --- Paste Image の設定 ---
  "pasteImage.path": "${projectRoot}/docs/images",
  "pasteImage.namePrefix": "${currentFileNameWithoutExt}_",
  "pasteImage.defaultName": "Y-MM-DD-HH-mm-ss",

  // --- Copilot / AI 関連 (Tabnineは手動で追加) ---
  "gitlens.ai.model": "vscode",
  "gitlens.ai.vscode.model": "copilot:gpt-4.1",
  "tabnine.experimentalAutoImports": true,
  "github.copilot.nextEditSuggestions.enabled": true
}
